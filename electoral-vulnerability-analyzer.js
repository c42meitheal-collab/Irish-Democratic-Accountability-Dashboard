/**
 * Electoral Vulnerability Analysis System
 * 
 * Identifies vulnerable landlord TDs for maximum democratic pressure
 * Creates strategic targeting framework for housing activism
 */

class ElectoralVulnerabilityAnalyzer {
    constructor() {
        this.vulnerabilityThresholds = {
            CRITICAL: 1.0,      // <1% margin - one good campaign flips seat
            HIGH: 2.5,          // 1-2.5% margin - organised effort can win  
            MEDIUM: 5.0,        // 2.5-5% margin - sustained campaign needed
            LOW: 10.0,          // 5-10% margin - long-term strategy required
            SAFE: 999           // >10% margin - focus elsewhere
        };
        
        this.campaignStrategies = {
            CRITICAL: {
                timeframe: '3-6 months',
                budget: '€15,000-25,000',
                tactics: ['Intensive canvassing', 'Local media blitz', 'Social media targeting', 'Community organizing'],
                success_probability: 0.75
            },
            HIGH: {
                timeframe: '6-12 months', 
                budget: '€8,000-15,000',
                tactics: ['Regular canvassing', 'Local media', 'Grassroots organizing', 'Issue-focused campaigns'],
                success_probability: 0.55
            },
            MEDIUM: {
                timeframe: '12-24 months',
                budget: '€5,000-10,000', 
                tactics: ['Community building', 'Long-term messaging', 'Coalition building', 'Issue awareness'],
                success_probability: 0.35
            },
            LOW: {
                timeframe: '24+ months',
                budget: '€2,000-5,000',
                tactics: ['Awareness campaigns', 'Opposition research', 'Coalition building', 'Policy advocacy'],
                success_probability: 0.15
            }
        };
    }

    /**
     * Analyze electoral vulnerability for all landlord TDs
     */
    analyzeElectoralVulnerability(integratedDatabase, electoralData) {
        const landlordTDs = Object.values(integratedDatabase.tds)
            .filter(td => td.properties.landlord_status);
        
        const vulnerabilityAnalysis = {
            metadata: {
                analysis_date: new Date().toISOString(),
                total_landlord_tds: landlordTDs.length,
                electoral_cycle: '2024-2029',
                next_election_estimate: '2029-11-30'
            },
            critical_vulnerabilities: [],
            high_vulnerabilities: [],
            medium_vulnerabilities: [],
            strategic_recommendations: {},
            resource_allocation: {},
            campaign_calendar: {}
        };
        
        // Analyze each landlord TD
        for (const td of landlordTDs) {
            const vulnerability = this.assessIndividualVulnerability(td, electoralData);
            
            // Categorize by vulnerability level
            switch (vulnerability.level) {
                case 'CRITICAL':
                    vulnerabilityAnalysis.critical_vulnerabilities.push(vulnerability);
                    break;
                case 'HIGH':
                    vulnerabilityAnalysis.high_vulnerabilities.push(vulnerability);
                    break;
                case 'MEDIUM':
                    vulnerabilityAnalysis.medium_vulnerabilities.push(vulnerability);
                    break;
            }
        }
        
        // Sort by strategic priority
        vulnerabilityAnalysis.critical_vulnerabilities.sort((a, b) => b.strategic_score - a.strategic_score);
        vulnerabilityAnalysis.high_vulnerabilities.sort((a, b) => b.strategic_score - a.strategic_score);
        vulnerabilityAnalysis.medium_vulnerabilities.sort((a, b) => b.strategic_score - a.strategic_score);
        
        // Generate strategic recommendations
        vulnerabilityAnalysis.strategic_recommendations = this.generateStrategicRecommendations(vulnerabilityAnalysis);
        
        // Calculate resource allocation
        vulnerabilityAnalysis.resource_allocation = this.calculateResourceAllocation(vulnerabilityAnalysis);
        
        // Create campaign calendar
        vulnerabilityAnalysis.campaign_calendar = this.createCampaignCalendar(vulnerabilityAnalysis);
        
        return vulnerabilityAnalysis;
    }

    /**
     * Assess individual TD vulnerability with comprehensive scoring
     */
    assessIndividualVulnerability(td, electoralData) {
        const constituencyData = electoralData.constituencies[td.constituency];
        
        if (!constituencyData) {
            return {
                td_name: `${td.first_name} ${td.last_name}`,
                constituency: td.constituency,
                level: 'UNKNOWN',
                strategic_score: 0,
                analysis: 'No electoral data available'
            };
        }
        
        // Base vulnerability from electoral margin
        let vulnerabilityLevel = this.getVulnerabilityLevel(constituencyData.margin_percentage);
        
        // Calculate strategic score (0-100)
        let strategicScore = this.calculateStrategicScore(td, constituencyData);
        
        // Generate vulnerability assessment
        const vulnerability = {
            td_name: `${td.first_name} ${td.last_name}`,
            party: td.party,
            constituency: td.constituency,
            level: vulnerabilityLevel,
            strategic_score: strategicScore,
            
            // Electoral metrics
            electoral_margin: constituencyData.margin_percentage,
            votes_needed_to_flip: constituencyData.votes_needed,
            total_valid_votes: constituencyData.total_valid_votes,
            
            // TD-specific factors
            property_count: td.properties.property_count,
            property_value: td.properties.total_value_estimate,
            hypocrisy_score: td.voting_record.hypocrisy_score,
            anti_tenant_votes: td.voting_record.housing_votes.anti_tenant_votes,
            
            // Strategic assessment
            campaign_strategy: this.campaignStrategies[vulnerabilityLevel],
            target_demographics: this.identifyTargetDemographics(td, constituencyData),
            messaging_framework: this.createMessagingFramework(td),
            coalition_opportunities: this.identifyCoalitionOpportunities(td, constituencyData),
            
            // Risk factors
            government_protection: this.assessGovernmentProtection(td),
            local_support_base: this.assessLocalSupportBase(td, constituencyData),
            media_vulnerability: this.assessMediaVulnerability(td),
            
            // Recommendations
            recommended_actions: this.generateRecommendedActions(td, constituencyData, vulnerabilityLevel),
            success_probability: this.campaignStrategies[vulnerabilityLevel].success_probability,
            estimated_timeline: this.campaignStrategies[vulnerabilityLevel].timeframe,
            estimated_budget: this.campaignStrategies[vulnerabilityLevel].budget
        };
        
        return vulnerability;
    }

    /**
     * Get vulnerability level based on electoral margin
     */
    getVulnerabilityLevel(margin) {
        if (margin < this.vulnerabilityThresholds.CRITICAL) return 'CRITICAL';
        if (margin < this.vulnerabilityThresholds.HIGH) return 'HIGH';
        if (margin < this.vulnerabilityThresholds.MEDIUM) return 'MEDIUM';
        if (margin < this.vulnerabilityThresholds.LOW) return 'LOW';
        return 'SAFE';
    }

    /**
     * Calculate comprehensive strategic score
     */
    calculateStrategicScore(td, constituencyData) {
        let score = 0;
        
        // Electoral vulnerability (0-40 points)
        const marginScore = Math.max(0, 40 - (constituencyData.margin_percentage * 8));
        score += marginScore;
        
        // Property ownership scandal potential (0-25 points)
        score += Math.min(td.properties.property_count * 2.5, 25);
        
        // Voting hypocrisy (0-20 points)  
        score += td.voting_record.hypocrisy_score * 0.2;
        
        // Government position vulnerability (0-10 points)
        if (['Fianna Fáil', 'Fine Gael', 'Green Party'].includes(td.party)) {
            score += 10;
        }
        
        // Urban vs rural factor (0-5 points)
        const urbanConstituencies = ['Dublin', 'Cork', 'Galway', 'Limerick', 'Waterford'];
        if (urbanConstituencies.some(city => td.constituency.includes(city))) {
            score += 5; // Urban areas more responsive to housing issues
        }
        
        return Math.min(score, 100);
    }

    /**
     * Identify target demographics for campaign
     */
    identifyTargetDemographics(td, constituencyData) {
        const demographics = [];
        
        // Always target renters and young voters for housing issues
        demographics.push('Renters (25-45 age group)');
        demographics.push('First-time home buyers (30-40 age group)');
        demographics.push('Young families affected by housing crisis');
        
        // Urban-specific targeting
        if (td.constituency.includes('Dublin')) {
            demographics.push('Urban professionals');
            demographics.push('Students and young workers');
            demographics.push('Parents concerned about housing costs');
        }
        
        // Rural-specific targeting  
        if (!td.constituency.includes('Dublin') && !td.constituency.includes('Cork')) {
            demographics.push('Rural families seeking affordable housing');
            demographics.push('Young people unable to afford local housing');
            demographics.push('Agriculture sector workers');
        }
        
        // Party-specific opposition
        if (td.party === 'Fianna Fáil' || td.party === 'Fine Gael') {
            demographics.push('Traditional party supporters disillusioned with housing policy');
        }
        
        return demographics;
    }

    /**
     * Create messaging framework for targeting TD
     */
    createMessagingFramework(td) {
        const messages = {
            primary_message: `${td.first_name} ${td.last_name} owns ${td.properties.property_count} properties but votes against tenant protections`,
            
            social_media_hashtags: [
                `#${td.last_name.replace(' ', '')}Hypocrisy`,
                `#${td.constituency.replace(' ', '').replace('-', '')}Housing`,
                '#LandlordTDs',
                '#HousingCrisis'
            ],
            
            attack_lines: [
                `How can ${td.first_name} ${td.last_name} represent tenants when they profit from the housing crisis?`,
                `${td.properties.property_count} properties, ZERO tenant protections - is this your representative?`,
                `While families struggle to find homes, ${td.first_name} ${td.last_name} votes to protect landlord profits`
            ],
            
            policy_contrasts: [
                'Voted AGAINST rent controls while owning rental properties',
                'Opposed vacant property taxes while sitting on empty units',
                'Blocked tenant protections while collecting rental income'
            ],
            
            local_angles: [
                `Housing crisis in ${td.constituency} demands representatives who put tenants first`,
                `${td.constituency} deserves better than landlord-first politics`,
                `Local families need advocates, not property investors in the Dáil`
            ]
        };
        
        return messages;
    }

    /**
     * Identify coalition opportunities
     */
    identifyCoalitionOpportunities(td, constituencyData) {
        const coalitions = [];
        
        // Housing organizations
        coalitions.push('Focus Ireland local branches');
        coalitions.push('Threshold tenant advocacy');
        coalitions.push('Local tenant unions');
        
        // Opposition parties
        const oppositionParties = ['Sinn Féin', 'Social Democrats', 'Labour Party', 'People Before Profit'];
        oppositionParties.forEach(party => {
            if (party !== td.party) {
                coalitions.push(`${party} local organization`);
            }
        });
        
        // Community groups
        coalitions.push('Local community associations');
        coalitions.push('Young Independents networks');
        coalitions.push('Progressive political groups');
        
        // Issue-specific groups
        if (td.constituency.includes('Dublin')) {
            coalitions.push('Dublin housing activist networks');
            coalitions.push('Student union housing campaigns');
        }
        
        return coalitions;
    }

    /**
     * Generate recommended actions for targeting
     */
    generateRecommendedActions(td, constituencyData, vulnerabilityLevel) {
        const actions = [];
        
        // Immediate actions (0-3 months)
        actions.push({
            timeframe: 'IMMEDIATE',
            action: 'Create social media campaign exposing property portfolio vs voting record',
            priority: 'HIGH',
            cost: '€500-1,000'
        });
        
        actions.push({
            timeframe: 'IMMEDIATE', 
            action: 'Research and document all property interests and votes',
            priority: 'HIGH',
            cost: '€200-500'
        });
        
        // Short-term actions (3-6 months)
        if (vulnerabilityLevel === 'CRITICAL' || vulnerabilityLevel === 'HIGH') {
            actions.push({
                timeframe: 'SHORT_TERM',
                action: 'Launch targeted canvassing in key areas of constituency',
                priority: 'HIGH',
                cost: '€2,000-5,000'
            });
            
            actions.push({
                timeframe: 'SHORT_TERM',
                action: 'Organize public meetings on housing crisis',
                priority: 'MEDIUM',
                cost: '€500-1,500'
            });
        }
        
        // Medium-term actions (6-18 months)
        actions.push({
            timeframe: 'MEDIUM_TERM',
            action: 'Build coalition with local housing groups',
            priority: 'HIGH',
            cost: '€1,000-3,000'
        });
        
        actions.push({
            timeframe: 'MEDIUM_TERM',
            action: 'Develop local opposition candidate or pressure existing opponents',
            priority: 'MEDIUM',
            cost: '€5,000-15,000'
        });
        
        // Long-term actions (18+ months)
        actions.push({
            timeframe: 'LONG_TERM',
            action: 'Sustained voter education campaign on housing issues',
            priority: 'MEDIUM',
            cost: '€3,000-8,000'
        });
        
        return actions;
    }

    /**
     * Assess government protection level
     */
    assessGovernmentProtection(td) {
        const protectionLevel = {
            level: 'LOW',
            factors: []
        };
        
        if (['Fianna Fáil', 'Fine Gael'].includes(td.party)) {
            protectionLevel.level = 'MEDIUM';
            protectionLevel.factors.push('Government party member');
        }
        
        if (td.minister) {
            protectionLevel.level = 'HIGH';
            protectionLevel.factors.push('Government minister');
        }
        
        if (td.properties.property_count > 10) {
            protectionLevel.factors.push('Significant financial interests');
        }
        
        return protectionLevel;
    }

    /**
     * Assess local support base strength
     */
    assessLocalSupportBase(td, constituencyData) {
        // Simplified assessment - would need local polling data for accuracy
        return {
            strength: constituencyData.margin_percentage > 10 ? 'STRONG' : 
                     constituencyData.margin_percentage > 5 ? 'MODERATE' : 'WEAK',
            factors: [
                `${constituencyData.margin_percentage}% electoral margin`,
                'Historical voting patterns',
                'Local family/business connections'
            ]
        };
    }

    /**
     * Assess media vulnerability
     */
    assessMediaVulnerability(td) {
        const vulnerabilityFactors = [];
        
        if (td.properties.property_count > 5) {
            vulnerabilityFactors.push('Large property portfolio creates scandal potential');
        }
        
        if (td.voting_record.anti_tenant_votes > 3) {
            vulnerabilityFactors.push('Clear voting record against tenant interests');
        }
        
        if (td.party === 'Fianna Fáil' || td.party === 'Fine Gael') {
            vulnerabilityFactors.push('Government party vulnerable to opposition attacks');
        }
        
        return {
            level: vulnerabilityFactors.length > 2 ? 'HIGH' : 
                   vulnerabilityFactors.length > 1 ? 'MEDIUM' : 'LOW',
            factors: vulnerabilityFactors
        };
    }

    /**
     * Generate strategic recommendations for overall campaign
     */
    generateStrategicRecommendations(vulnerabilityAnalysis) {
        const recommendations = {
            priority_strategy: 'Focus maximum resources on critical and high vulnerability targets',
            
            immediate_focus: vulnerabilityAnalysis.critical_vulnerabilities.slice(0, 3).map(v => ({
                target: v.td_name,
                constituency: v.constituency,
                rationale: `${v.electoral_margin}% margin with ${v.property_count} properties - high impact potential`
            })),
            
            resource_distribution: {
                critical_targets: '60% of resources',
                high_targets: '30% of resources', 
                medium_targets: '10% of resources',
                low_targets: 'Minimal/volunteer only'
            },
            
            timeline_strategy: {
                'Months 1-6': 'Establish infrastructure, target critical vulnerabilities',
                'Months 6-18': 'Expand to high vulnerability targets, sustained campaigns',
                'Months 18-30': 'Medium vulnerability targets, long-term positioning',
                'Months 30+': 'Prepare for next electoral cycle'
            },
            
            success_metrics: [
                'Electoral performance in targeted constituencies',
                'Media coverage of landlord TD hypocrisy',
                'Public awareness of housing conflicts of interest',
                'Policy changes or public commitments from targeted TDs',
                'Opposition candidate recruitment and support'
            ]
        };
        
        return recommendations;
    }

    /**
     * Calculate resource allocation across targets
     */
    calculateResourceAllocation(vulnerabilityAnalysis) {
        const totalBudgetEstimate = 100000; // €100K total campaign budget
        
        const allocation = {
            total_budget: totalBudgetEstimate,
            
            critical_allocation: {
                budget: totalBudgetEstimate * 0.6,
                targets: vulnerabilityAnalysis.critical_vulnerabilities.length,
                budget_per_target: (totalBudgetEstimate * 0.6) / Math.max(vulnerabilityAnalysis.critical_vulnerabilities.length, 1)
            },
            
            high_allocation: {
                budget: totalBudgetEstimate * 0.3,
                targets: vulnerabilityAnalysis.high_vulnerabilities.length,
                budget_per_target: (totalBudgetEstimate * 0.3) / Math.max(vulnerabilityAnalysis.high_vulnerabilities.length, 1)
            },
            
            medium_allocation: {
                budget: totalBudgetEstimate * 0.1,
                targets: vulnerabilityAnalysis.medium_vulnerabilities.length,
                budget_per_target: (totalBudgetEstimate * 0.1) / Math.max(vulnerabilityAnalysis.medium_vulnerabilities.length, 1)
            }
        };
        
        return allocation;
    }

    /**
     * Create campaign calendar with milestones
     */
    createCampaignCalendar(vulnerabilityAnalysis) {
        const now = new Date();
        const calendar = {
            campaign_launch: new Date(now.getTime() + 30 * 24 * 60 * 60 * 1000), // 1 month
            
            phase_1_milestones: {
                '3_months': 'Research complete, social media campaigns launched',
                '6_months': 'Critical target campaigns in full swing',
                '9_months': 'First impact assessment and strategy adjustment'
            },
            
            phase_2_milestones: {
                '12_months': 'High vulnerability targets engaged',
                '18_months': 'Coalition building complete',
                '24_months': 'Medium targets campaign launch'
            },
            
            phase_3_milestones: {
                '30_months': 'Pre-election positioning',
                '36_months': 'Candidate recruitment complete',
                '42_months': 'Election preparation',
                '48_months': 'Next election cycle'
            },
            
            quarterly_reviews: [
                'Impact assessment every 3 months',
                'Strategy adjustment based on results',
                'Resource reallocation as needed',
                'Coalition and media relationship maintenance'
            ]
        };
        
        return calendar;
    }
}

// Export for integration with main system
if (typeof module !== 'undefined' && module.exports) {
    module.exports = { ElectoralVulnerabilityAnalyzer };
}

// Browser compatibility
if (typeof window !== 'undefined') {
    window.ElectoralVulnerabilityAnalyzer = ElectoralVulnerabilityAnalyzer;
}

// Usage function for immediate deployment
async function runElectoralAnalysis(integratedDatabase, electoralData) {
    console.log('🎯 Starting Electoral Vulnerability Analysis...\n');
    
    const analyzer = new ElectoralVulnerabilityAnalyzer();
    const analysis = analyzer.analyzeElectoralVulnerability(integratedDatabase, electoralData);
    
    console.log('📊 ELECTORAL VULNERABILITY ANALYSIS COMPLETE\n');
    console.log(`🚨 Critical Targets: ${analysis.critical_vulnerabilities.length}`);
    console.log(`⚡ High Priority Targets: ${analysis.high_vulnerabilities.length}`);
    console.log(`📍 Medium Priority Targets: ${analysis.medium_vulnerabilities.length}`);
    
    console.log('\n🎯 TOP CRITICAL TARGETS:');
    analysis.critical_vulnerabilities.slice(0, 3).forEach((target, index) => {
        console.log(`${index + 1}. ${target.td_name} (${target.party}) - ${target.constituency}`);
        console.log(`   Electoral Margin: ${target.electoral_margin}% (${target.votes_needed_to_flip} votes needed)`);
        console.log(`   Properties: ${target.property_count} | Hypocrisy Score: ${target.hypocrisy_score}/100`);
        console.log(`   Strategy: ${target.campaign_strategy.timeframe} | Budget: ${target.estimated_budget}`);
        console.log(`   Success Probability: ${(target.success_probability * 100).toFixed(0)}%\n`);
    });
    
    return analysis;
}

// Make available for browser usage
if (typeof window !== 'undefined') {
    window.runElectoralAnalysis = runElectoralAnalysis;
}